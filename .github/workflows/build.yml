name: Build Pacparser

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: make non-windows
      if:  ${{ matrix.os != 'windows-latest' }}
      run: make -C src

    - name: make windows
      if:  ${{ matrix.os == 'windows-latest' }}
      run: make -C src -f Makefile.win32
      
    - name: make non-windows dist
      if:  ${{ matrix.os != 'windows-latest' }}
      run: |
        DESTDIR=dist PREFIX= make -C src install
        ls -R src/dist

    - name: make windows dist
      if:  ${{ matrix.os == 'windows-latest' }}
      run: |
        make -C src -f Makefile.win32 dist

    - name: Upload dist
      uses: actions/upload-artifact@v2
      with:
        name: pacparser-${{ matrix.os }}-dist
        path: src/dist
        
  python-module-build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
        
    - name: make non-windows
      if:  ${{ matrix.os != 'windows-latest' }}
      run: make -C src pymod-dist

    - name: make windows
      if:  ${{ matrix.os == 'windows-latest' }}
      run: make -C src -f Makefile.win32 pymod-dist

    - name: Upload dist
      uses: actions/upload-artifact@v2
      with:
        name: pacparser-python-${{ matrix.python-version }}-${{ matrix.os }}-dist
        path: src/pymod/pacparser-python*
