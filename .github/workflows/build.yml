name: Build Pacparser

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: make non-windows
      if:  ${{ matrix.os != 'windows-latest' }}
      run: make -C src

    - name: make windows
      if:  ${{ matrix.os == 'windows-latest' }}
      run: make -C src -f Makefile.win32
      
    - name: make non-windows dist
      if:  ${{ matrix.os != 'windows-latest' }}
      run: |
        DESTDIR=dist PREFIX= make -C src install
        ls -R src/dist

    - name: make windows dist
      if:  ${{ matrix.os == 'windows-latest' }}
      run: |
        make -C src -f Makefile.win32 dist

    - name: Upload dist
      uses: actions/upload-artifact@v2
      with:
        name: pacparser-${{ matrix.os }}-dist
        path: src/dist
        
  python-module-build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
        
    - name: make non-windows
      if:  ${{ matrix.os != 'windows-latest' }}
      run: make -C src pymod-dist

    - name: make windows
      if:  ${{ matrix.os == 'windows-latest' }}
      run: make -C src -f Makefile.win32 pymod-dist

    - name: Upload dist
      uses: actions/upload-artifact@v2
      with:
        name: pacparser-python-${{ matrix.python-version }}-${{ matrix.os }}-dist
        path: src/pymod/pacparser-python*

  build-wheels:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
        
    - name: make non-windows
      if:  ${{ matrix.os != 'windows-latest' }}
      run: make -C src pymod

    - name: make windows
      if:  ${{ matrix.os == 'windows-latest' }}
      run: make -C src -f Makefile.win32 pymod

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel
          
    - name: Build wheel
      if:  ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        cp spidermonkey/libjs.a pacparser.o src/pymod
        cd src/pymod && python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "{cp37,cp38,cp39,cp310}-manylinux*64

    - name: Publish package to PyPI
      if:  ${{ matrix.os == 'ubuntu-latest' }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI }}
        packages_dir: src/pymod/wheelhouse
