# Copyright (C) 2007 Manu Garg.
# Author: Manu Garg <manugarg@gmail.com>
#
# Makefile for pacparser. Please read README file included with this package
# for more information about pacparser.
#
# pacparser is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.

# pacparser is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA

# This file is not part of the source code repository. It's generated by the
# packaging script.
-include version.mk

BASH ?= bash
PREFIX ?= /usr
VERSION ?= $(shell git describe --always --tags --candidate=100)
OS_ARCH := $(subst /,_,$(shell uname -s | sed /\ /s//_/))

LIBRARY_NAME = libpacparser
LIB_VER = 1

PYTHON ?= python

LDFLAGS =
CFLAGS = -g -DXP_UNIX -Wall -DVERSION=$(VERSION)

# NOTICE(slattarini): in an ideal world, we would autonconfiscate the
# pacparser build system and turn these definition into automatically
# populated ones (via ./configure); however, given the current status of
# the build system, compounded by the fact that we use a bundled package
# (SpiderMonkey) which is not autoconfiscated and mostly incompatible with
# several autotools conventions, we take the easier albeit suboptimal
# solution.
ENABLE_C_ARES ?= auto
ifeq "$(ENABLE_C_ARES)" "auto"
  ENABLE_C_ARES := $(shell pkg-config --exists libcares && echo yes || echo no)
  $(info ENABLE_C_ARES was undefined; autodetected to "$(ENABLE_C_ARES)")
  ifeq "$(ENABLE_C_ARES)" "yes"
    C_ARES_CFLAGS := $(shell pkg-config --cflags libcares)
    C_ARES_LDFLAGS := $(shell pkg-config --libs libcares)
    C_ARES_LDFLAGS += -Wl,-rpath
    C_ARES_LDFLAGS += -Wl,$(shell pkg-config --variable=libdir libcares)
  endif
endif
ifeq "$(ENABLE_C_ARES)" "yes"
  C_ARES_CFLAGS += -DHAVE_C_ARES
else
  $(warning c-ares (http://c-ares.haxx.se) library not found or disabled)
  $(warning Some DNS-related features will be unavailable)
endif
CFLAGS += $(C_ARES_CFLAGS)
LDFLAGS += $(C_ARES_LDFLAGS)

# This Makefile should at least work on Linux and Mac OS X. It should work on
# most other types of Unix systems too, but I have not put any conscious effort
# for that.
#
# Set variables according to Linux.
SO_SUFFIX = so
LIBRARY = $(LIBRARY_NAME).$(SO_SUFFIX).$(LIB_VER)
MKSHLIB = $(CC) -shared
LIB_OPTS = -Wl,-soname=$(LIBRARY) -Wl,-exclude-libs=libjs.a
SHFLAGS = -fPIC
SMCFLAGS = -DHAVE_VA_COPY -DVA_COPY=__va_copy

ifeq ($(OS_ARCH),Darwin)
  MAC_MINOR_VERSION := $(shell sw_vers -productVersion | cut -d. -f2)
  MAC_GT_5 := $(shell [ $(MAC_MINOR_VERSION) -le 5 ] && echo false)
  SO_SUFFIX = dylib
  LIBRARY = $(LIBRARY_NAME).$(LIB_VER).$(SO_SUFFIX)
  MKSHLIB = $(CC) -dynamiclib -framework System
  LIB_OPTS = -install_name $(PREFIX)/lib/$(notdir $@)
  SHFLAGS =
  ifeq ($(MAC_GT_5),false)
    SMCFLAGS =
  endif
endif

# Spidermonkey library.
CFLAGS += -Ispidermonkey/js/src

LIBRARY_LINK = $(LIBRARY_NAME).$(SO_SUFFIX)
PREFIX := $(DESTDIR)$(PREFIX)
LIB_PREFIX = $(PREFIX)/lib
INC_PREFIX = $(PREFIX)/include
BIN_PREFIX = $(PREFIX)/bin
MAN_PREFIX = $(PREFIX)/share/man

.PHONY: default all docs clean pymod install-pymod install testpactester
all: testpactester

spidermonkey/js/src: spidermonkey/js.tar.gz
	tar xzvf $< -C spidermonkey
	sed -i -e 's:\(shell uname -s | sed /\\ /s//_/\):\1 | sed s,GNU.*,Linux,:g' spidermonkey/js/src/config.mk

jsapi_buildstamp: spidermonkey/js/src
	cd spidermonkey && SMCFLAGS="$(SHFLAGS) $(SMCFLAGS)" "$(MAKE)" jsapi
	touch jsapi_buildstamp

libjs.a: spidermonkey/js/src
	cd spidermonkey && SMCFLAGS="$(SHFLAGS) $(SMCFLAGS)" "$(MAKE)" jslib

%.o: %.c
	$(CC) $(CFLAGS) $(SHFLAGS) -c $< -o $@

pacparser.o: pac_builtins.h pacparser.h pacparser_dns.h pacparser_utils.h
pacparser.o: jsapi_buildstamp
pacparser_dns.o: pacparser_dns.h pacparser_utils.h
pactester.o: pacparser.h pacparser_utils.h

# Also used for the python module, below.
LIBRARY_DEPS = pacparser_dns.o pacparser.o libjs.a

$(LIBRARY): $(LIBRARY_DEPS)
	$(MKSHLIB) $(CFLAGS) $(LDFLAGS) -o $@ $^ -lm

$(LIBRARY_LINK): $(LIBRARY)
	ln -sf $(LIBRARY) $(LIBRARY_LINK)

pactester: pactester.o $(LIBRARY_LINK)
	$(CC) $(CFLAGS) $< -o $@ -lpacparser $(LDFLAGS) -L. -I.

oldtestpactester: pactester
	@echo "Running tests for pactester."
	NO_INTERNET='$(NO_INTERNET)' ../tests/runtests.sh

testpactester: pactester
	@set -u -e; st=0; \
	 export PACTESTER="$$(pwd)/$<"; \
	 (set -x && $(BASH) pactester_nointernet_test.sh) || st=1; \
	 tst=pactester_dns_test.sh; \
	 if [ -n '$(NO_INTERNET)' ]; then \
	   echo "Skipping test $${tst}"; \
	   exit $${st}; \
	 fi; \
	 args=$$(test -z '$(NO_IPV6)' && printf '%s\n' '--ipv6'); \
	 (set -x && $(BASH) $${tst} $${args}) || st=1; \
	 if [ '$(ENABLE_C_ARES)' = 'yes' ]; then \
	   (set -x && $(BASH) $${tst} $${args} --c-ares) || st=1; \
	 fi; \
	 exit $${st}

docs:
	../tools/generatedocs.sh

install: all
	install -d $(LIB_PREFIX) $(INC_PREFIX) $(BIN_PREFIX)
	install -m 644 $(LIBRARY) $(LIB_PREFIX)/$(LIBRARY)
	ln -sf $(LIBRARY) $(LIB_PREFIX)/$(LIBRARY_LINK)
	install -m 755 pactester $(BIN_PREFIX)/pactester
	install -m 644 pacparser.h $(INC_PREFIX)/pacparser.h
	install -m 644 pacparser_dns.h $(INC_PREFIX)/pacparser_dns.h
	# install pactester manpages
	install -d $(MAN_PREFIX)/man1/
	(test -d ../docs && install -m 644 ../docs/man/man1/*.1 $(MAN_PREFIX)/man1/) || true
	# install pacparser manpages
	install -d $(MAN_PREFIX)/man3/
	(test -d ../docs && install -m 644 ../docs/man/man3/*.3 $(MAN_PREFIX)/man3/) || true
	# install html docs
	install -d $(PREFIX)/share/doc/pacparser/html/
	(test -d ../docs/html && install -m 644 ../docs/html/* $(PREFIX)/share/doc/pacparser/html/) || true
	# install examples
	install -d $(PREFIX)/share/doc/pacparser/examples/
	(test -d ../examples && install -m 644 ../examples/* $(PREFIX)/share/doc/pacparser/examples/) || true

pymod: $(LIBRARY_DEPS)
	cd pymod && C_ARES_LDFLAGS="$(C_ARES_LDFLAGS)" ARCHFLAGS="" $(PYTHON) setup.py build
	$(PYTHON) ../tests/runtests.py

install-pymod: pymod
	cd pymod && ARCHFLAGS="" $(PYTHON) setup.py install --root="$(DESTDIR)/" $(EXTRA_ARGS)

clean:
	rm -f $(LIBRARY_LINK) $(LIBRARY) libjs.a *.o pactester jsapi_buildstamp
	rm -f pac.js.tmp stdout.tmp stderr.tmp
	cd pymod && python setup.py clean --all
	cd spidermonkey && "$(MAKE)" clean
